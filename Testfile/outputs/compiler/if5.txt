AST tree:
[If (AstList [AstInt 5,LogicOperator "==",AstInt 5,LogicOperator "&&",AstInt 3,LogicOperator "==",AstInt 3,LogicOperator "&&",AstInt 6,LogicOperator "==",AstInt 6]) (AstList [AstCall (AstSymbol "print") (AstList [AstBool True])]) (AstList [AstCall (AstSymbol "print") (AstList [AstBool False])]),AstCall (AstSymbol "print") (AstList [AstString "outside"])]
(env)
[]
(insts)
[Push (IntValue 5),Push (IntValue 5),Push (Operator Eq),CallOp,Push (IntValue 3),Push (IntValue 3),Push (Operator Eq),CallOp,Push (IntValue 6),Push (IntValue 6),Push (Operator Eq),CallOp,Push (Operator And),CallOp,Push (Operator And),CallOp,JumpIfFalse 3,Push (BoolValue True),PushToOutput,Jump 2,Push (BoolValue False),PushToOutput,Push (StringValue "outside"),PushToOutput,Ret]
Environment:
Instructions:
Push (IntValue 5)
Push (IntValue 5)
Push (Operator Eq)
CallOp
Push (IntValue 3)
Push (IntValue 3)
Push (Operator Eq)
CallOp
Push (IntValue 6)
Push (IntValue 6)
Push (Operator Eq)
CallOp
Push (Operator And)
CallOp
Push (Operator And)
CallOp
JumpIfFalse 3
Push (BoolValue True)
PushToOutput
Jump 2
Push (BoolValue False)
PushToOutput
Push (StringValue "outside")
PushToOutput
Ret
