AST tree:
[Define (AstSymbol "a") (AstInt 1),Define (AstSymbol "b") (AstInt 2),If (AstList [AstSymbol "a",LogicOperator "==",AstSymbol "b"]) (AstList [AstCall (AstSymbol "print") (AstList [AstString "lol"])]) AstNone,AstCall (AstSymbol "print") (AstList [AstString "ahahaha"])]
(env)
[]
(insts)
[Push (IntValue 1),AssignEnvValue "a",Push (IntValue 2),AssignEnvValue "b",PushVMEnv "a",PushVMEnv "b",Push (Operator Eq),CallOp,JumpIfFalse 2,Push (StringValue "lol"),PushToOutput,Push (StringValue "ahahaha"),PushToOutput,Ret]
Environment:
Instructions:
Push (IntValue 1)
AssignEnvValue "a"
Push (IntValue 2)
AssignEnvValue "b"
PushVMEnv "a"
PushVMEnv "b"
Push (Operator Eq)
CallOp
JumpIfFalse 2
Push (StringValue "lol")
PushToOutput
Push (StringValue "ahahaha")
PushToOutput
Ret
